{
  "artifacts": [],
  "command": "my_main",
  "experiment": {
    "base_dir": "/home/yyf/workspace/CollaQ/src",
    "dependencies": [
      "munch==2.5.1.dev12",
      "numpy==1.19.2",
      "PyYAML==5.3.1",
      "sacred==0.8.1",
      "torch==1.6.0"
    ],
    "mainfile": "main.py",
    "name": "pymarl",
    "repositories": [
      {
        "commit": "ac43314fcf955a21fd21cf644bea864bf4b5013a",
        "dirty": true,
        "url": "https://github.com/facebookresearch/CollaQ.git"
      },
      {
        "commit": "ac43314fcf955a21fd21cf644bea864bf4b5013a",
        "dirty": true,
        "url": "https://github.com/facebookresearch/CollaQ.git"
      },
      {
        "commit": "ac43314fcf955a21fd21cf644bea864bf4b5013a",
        "dirty": true,
        "url": "https://github.com/facebookresearch/CollaQ.git"
      }
    ],
    "sources": [
      [
        "main.py",
        "_sources/main_63d7d00072f4e5be0310acb11aa60581.py"
      ],
      [
        "run.py",
        "_sources/run_294179025519905055555264e4ed7d3f.py"
      ],
      [
        "utils/logging.py",
        "_sources/logging_aa14e56e60b01dd7a9ddb8e6cdf36b85.py"
      ]
    ]
  },
  "fail_trace": [
    "Traceback (most recent call last):\n",
    "  File \"/home/yyf/workspace/CollaQ/third_party/sacred/sacred/stdout_capturing.py\", line 165, in tee_output_fd\n    yield out  # let the caller do their printing\n",
    "  File \"/home/yyf/workspace/CollaQ/third_party/sacred/sacred/run.py\", line 238, in __call__\n    self.result = self.main_function(*args)\n",
    "  File \"/home/yyf/workspace/CollaQ/third_party/sacred/sacred/config/captured_function.py\", line 42, in captured_function\n    result = wrapped(*args, **kwargs)\n",
    "  File \"src/main.py\", line 35, in my_main\n    run(_run, config, _log)\n",
    "  File \"/home/yyf/workspace/CollaQ/src/run.py\", line 48, in run\n    run_sequential(args=args, logger=logger)\n",
    "  File \"/home/yyf/workspace/CollaQ/src/run.py\", line 206, in run_sequential\n    learner.train(episode_sample, runner.t_env, episode)\n",
    "  File \"/home/yyf/workspace/CollaQ/src/learners/q_learner.py\", line 50, in train\n    agent_outs = self.mac.forward(batch, t=t)\n",
    "  File \"/home/yyf/workspace/CollaQ/src/controllers/basic_controller.py\", line 37, in forward\n    agent_inputs = self._build_inputs(ep_batch, t)\n",
    "  File \"/home/yyf/workspace/CollaQ/src/controllers/basic_controller.py\", line 101, in _build_inputs\n    inputs = th.cat([x.reshape(bs*self.n_agents, -1) for x in inputs], dim=1)\n",
    "RuntimeError: CUDA out of memory. Tried to allocate 2.00 MiB (GPU 0; 5.80 GiB total capacity; 60.92 MiB already allocated; 36.94 MiB free; 66.00 MiB reserved in total by PyTorch)\n",
    "\nDuring handling of the above exception, another exception occurred:\n\n",
    "Traceback (most recent call last):\n",
    "  File \"/home/yyf/anaconda3/envs/ma/lib/python3.6/contextlib.py\", line 99, in __exit__\n    self.gen.throw(type, value, traceback)\n",
    "  File \"/home/yyf/workspace/CollaQ/third_party/sacred/sacred/stdout_capturing.py\", line 177, in tee_output_fd\n    tee_stdout.wait(timeout=1)\n",
    "  File \"/home/yyf/anaconda3/envs/ma/lib/python3.6/subprocess.py\", line 1469, in wait\n    raise TimeoutExpired(self.args, timeout)\n",
    "subprocess.TimeoutExpired: Command '['tee', '-a', '/tmp/tmpqjxepdeh']' timed out after 1 seconds\n"
  ],
  "heartbeat": "2021-01-03T05:49:12.422927",
  "host": {
    "ENV": {},
    "cpu": "Intel(R) Core(TM) i9-9900 CPU @ 3.10GHz",
    "gpus": {
      "driver_version": "450.80.02",
      "gpus": [
        {
          "model": "GeForce RTX 2060",
          "persistence_mode": true,
          "total_memory": 5934
        }
      ]
    },
    "hostname": "debian-yyf",
    "os": [
      "Linux",
      "Linux-5.8.0-0.bpo.2-amd64-x86_64-with-debian-bullseye-sid"
    ],
    "python_version": "3.6.12"
  },
  "meta": {
    "command": "my_main",
    "options": {
      "--beat-interval": null,
      "--capture": null,
      "--comment": null,
      "--debug": false,
      "--enforce_clean": false,
      "--file_storage": null,
      "--force": false,
      "--help": false,
      "--loglevel": null,
      "--mongo_db": null,
      "--name": null,
      "--pdb": false,
      "--print-config": false,
      "--priority": null,
      "--queue": false,
      "--s3": null,
      "--sql": null,
      "--tiny_db": null,
      "--unobserved": false,
      "COMMAND": null,
      "UPDATE": [
        "env_args.map_name=MMM2,"
      ],
      "help": false,
      "with": true
    }
  },
  "resources": [],
  "result": null,
  "start_time": "2021-01-03T05:48:26.514030",
  "status": "FAILED",
  "stop_time": "2021-01-03T05:49:12.426185"
}